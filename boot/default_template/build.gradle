group 'com.boot'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'war'
apply plugin: 'groovy'
version = '1.0'
sourceCompatibility = 1.8
targetCompatibility = 1.8
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
compileJava {
    options.fork = true
    options.forkOptions.executable = "${System.getenv().JAVA_HOME}/bin/javac" // assumes that javac is on PATH
    //options.compilerArgs << "-XDignore.symbol.file"// does not exist 오류나면..
}

buildscript {
    ext {
        springBootVersion = '1.4.1.RELEASE'
    }
    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
//        classpath("org.springframework:springloaded:1.2.5.RELEASE")
    }
}

repositories {
    maven { url "http://119.206.205.172:8081/nexus/content/repositories/releases/" }
    mavenCentral()
//    maven { url "http://www.egovframe.go.kr/maven/" }
}


dependencies {

//    compile(group: 'egovframework.rte', name: 'egovframework.rte.ptl.mvc', version:'3.5.0') {
//        exclude(group: 'egovframework.rte')
////        exclude(module: 'commons-logging')
//    }

    compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-security:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-integration:${springBootVersion}")
    //devtools
    compile("org.springframework.boot:spring-boot-devtools")
    //config를위하여
    compile("org.springframework.boot:spring-boot-configuration-processor")
    //optional ("org.springframework.boot:spring-boot-configuration-processor")

    //view template  select one!
    compile("org.springframework.boot:spring-boot-starter-groovy-templates:${springBootVersion}")
    //compile("org.springframework.boot:spring-boot-starter-thymeleaf:${springBootVersion}")
    //compile("org.springframework.boot:spring-boot-starter-velocity:${springBootVersion}")

    compile("com.h2database:h2:1.4.192");

    /*jsp jstl viwe 쓰려면
    compile("javax.servlet:jstl");
    compile("org.apache.tomcat.embed:tomcat-embed-jasper")
    */
    compile('com.jayway.jsonpath:json-path:2.1.0')

    /* lombok*/
    compile group: 'org.projectlombok', name: 'lombok', version: '1.16.8'
    /* quartz */
    compile group: 'org.quartz-scheduler', name: 'quartz', version: '1.8.6'
    // https://mvnrepository.com/artifact/javax.transaction/jta
    compile group: 'javax.transaction', name: 'jta', version: '1.1'

    /* email */
    compile group: 'javax.mail', name: 'mail', version: '1.4.7'

    /* class scaner  https://sites.google.com/site/javacornproject/corn-cps */
    compile group: 'net.sf.corn', name: 'corn-cps', version: '1.1.7'


    testCompile ("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")


    compile group: 'com.omnicns', name: 'common-java', version: '0.0.1'
    compile group: 'com.omnicns', name: 'common-jsp', version: '0.0.1'
    compile group: 'com.omnicns', name: 'common-spring', version: '0.0.1'


    testCompile group: 'junit', name: 'junit', version: '4.11'
}
compileJava.dependsOn(processResources)
idea {
    module {
        inheritOutputDirs = false
        outputDir = file("$buildDir/classes/main/")
    }
}